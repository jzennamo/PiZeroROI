#include "services_microboone.fcl"
#include "pizerofilter_microboone.fcl"

process_name : PiZeroFilter      #The process name must NOT contain any underscores

source : {
  module_type : RootInput
  maxEvents   : -1
}

services : {

  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService: { fileName: "PiZeroFilter.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  #message:                 @local::microboone_message_services_prod_debug
  message:      @local::standard_info
  user:
  {
	#BELOW you see a list of the common services! Uncomment the ones you need.
  	#ExptGeoHelperInterface:         @local::microboone_geometry_helper
  	#Geometry:                       @local::microboone_geo
 	#DetectorProperties:             @local::microboone_detproperties
 	#LArProperties:                  @local::microboone_properties
 	#DatabaseUtil:                   @local::microboone_database
 	#TimeService:                    @local::microboone_timeservice
 	#SpaceCharge:                    @local::microboone_spacecharge
 	#SeedService:                    @local::microboone_seedservice
	#LArFFT:                         @local::microboone_larfft
	#SignalShapingServiceMicroBooNE: @local::microboone_signalshapingservice
	#BackTracker:                    @local::microboone_backtracker  
	#MemoryPeakReporter: {}
	#OpDigiProperties:               @local::microboone_opdigiproperties
  }

}

physics: {

  producers : {
     # ParameterSets for zero or more producer modules
  }
  analyzers: {
     # ParameterSets for zero or more analyzer modules
  }

  filters : {
        pizerofilter: @local::microboone_pizerofilter
     # ParameterSets for zero or more filter modules
  }

  path0 : [ pizerofilter ]
  #path1 : [  comma separated list of module labels of producer or filter modules  ]

  #path2 : [  comma separated list of module labels of analyzer or output modules  ]
  #path3 : [  comma separated list of module labels of analyzer or output modules  ]

  stream: [ out0 ]
  trigger_paths: [ path0 ]
  end_paths:     [ stream ]

}

outputs: {
    out0: { module_type: RootOutput
            fileName: "output_file.root"
            fastCloning: false 
            SelectEvents: { SelectEvents: [ path0 ] }
            compressionLevel: 1
            }
}

physics.filters.pizerofilter.MuonTrackLengthCut: 25.
physics.filters.pizerofilter.TrackVertexProximityCut: 5.
physics.filters.pizerofilter.ShowerVertex2dProximityCut: 80.
physics.filters.pizerofilter.ShowerDetached2dProximityCut: 10.
physics.filters.pizerofilter.MinMinDetachedShowersPerPlaneCut: 0
physics.filters.pizerofilter.MinMaxDetachedShowersPerPlaneCut: 0
